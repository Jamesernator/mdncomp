"use strict";module.exports=init;const mdn=require("mdn-browser-compat-data"),options=require("commander"),fs=require("fs"),version=require("../package.json").version,args=process.argv,log=console.log.bind(console);function init(){options.version(version,"-v, --version").usage("[options] <apipath>").description("Get MDN Browser Compatibility data.\n  (c) 2018 K3N / epistemex.com").option("-l, --list","List paths starting with the given value or . for top-level").option("-o, --out <path>","Save information to file").option("-d, --desktop","Show desktop only").option("-m, --mobile","Show mobile devices only").option("-c, --case-sensitive","Search in case-sensitive mode").option("-a, --show-all","If search results in more than entry, show info for all").option("-s, --shorthand","Show compatibility as shorthand with multiple results").option("-b, --no-colors","Don't use colors in output",false).option("--max-chars <width>","Max number of chars per line before wrap (min. 62)",72).option("-N, --no-notes","Don't show notes").option("-e, --noteend","Show notes (-n) at end instead of in sections").option("-f, --markdown [type]","Format output as markdown (0=none, 1=GitHub, 2=Stackoverflow",0).action(go).on("--help",function(){log();log("  Default output is a formatted code block.");log();log("  Examples:");log("    $ mdncomp api.Blob");log("    $ mdncomp --notes api.Blob");log("    $ mdncomp css.properties.background-color");log("    $ mdncomp --list api.HTML*");log()}).parse(args)}function outInfo(txt){if(Array.isArray(txt))txt=txt.join("\n");log(txt)}function outStore(txt,noFile){if(Array.isArray(txt))txt=txt.join("\n");if(noFile||!options.out)log(txt);else{}}function go(path){if(!options.colors){Object.keys(ANSI).forEach(color=>{ANSI[color]=""})}if(options.list){if(path==="."){outInfo(listTopLevels())}else{let result=list(path,options.caseSensitive);outInfo(result);outInfo("Found "+result.length+" items.")}}else{let result=search(path,options.caseSensitive);if(!result.length)outInfo("Not found.");else{if(result.length===1||options.showAll){result.forEach(function(entry){resultOut(entry)});outStore(ANSI.fgMagenta+ANSI.dim+"Data from MDN - `npm i -g mdncomp` ver. "+version+ANSI.reset+lf)}else{outStore(result);outInfo("Found "+result.length+" items.")}}}function resultOut(entry){outStore(options.shorthand?compatToShort(convertCompat(entry)):compatToLong(convertCompat(entry)))}}const ANSI={reset:"[0m",bright:"[1m",dim:"[2m",italic:"[3m",underline:"[4m",blink:"[5m",reverse:"[7m",hidden:"[8m",fgBlack:"[30m",fgRed:"[31m",fgGreen:"[32m",fgYellow:"[33m",fgBlue:"[34m",fgMagenta:"[35m",fgCyan:"[36m",fgWhite:"[37m",bgBlack:"[40m",bgRed:"[41m",bgGreen:"[42m",bgYellow:"[43m",bgBlue:"[44m",bgMagenta:"[45m",bgCyan:"[46m",bgWhite:"[47m"};const lf="\n",yes="Y",no="-",yes8="âœ”",no8="âœ˜";String.prototype.center=function(length){let aLen=this.ansiLength(),pad=length-aLen>>>1,str="".padStart(pad)+this+"".padStart(pad);return" ".substr(0,length-str.ansiLength())+str};String.prototype.ansiLength=function(){return this.replace(/\x1b[^m]*m/g,"").length};function buildTable(){const result=[],keys=listTopLevels();keys.forEach(key1=>{if(key1!=="__compat")result.push(key1);Object.keys(mdn[key1]).forEach(key2=>{if(key2!=="__compat")result.push(key1+"."+key2);Object.keys(mdn[key1][key2]).forEach(key3=>{if(key3!=="__compat")result.push(key1+"."+key2+"."+key3)})})});return result.sort()}function listTopLevels(){return Object.keys(mdn)}function getComparer(str){if(!str.includes("*"))str="*"+str+"*";return new RegExp("^"+str.split("*").join(".*")+"$")}function getPathAsObject(path){let parts=path.split("."),obj=mdn;parts.forEach(part=>{if(obj)obj=obj[part]});return obj}function nameFromPath(path){let i=path.lastIndexOf(".");return i>0?path.substr(i+1):path}function isCompat(path){let obj=getPathAsObject(path);return obj?typeof obj.__compat!=="undefined":false}function cleanHTML(str){return str.replace(/(<([^>]+)>)/gi,"")}function breakLine(s,max){let out=new Output(0),_max=Math.max(62,max>>>0||72),line=s.substr(0,_max),i;while(line.length===_max){i=line.lastIndexOf(" ");if(i<0)i=_max;out.addLine(line.substr(0,i).trim());s=s.substr(i);line=s.substr(1,_max)}out.add(line.trim());return out.toString()}function search(keyword,sensitive){let cmp=getComparer(sensitive?keyword:keyword.toLowerCase()),tbl=buildTable(),result=[];tbl.forEach(path=>{let _path=sensitive?path:path.toLowerCase();if(cmp.test(_path)&&isCompat(path))result.push(path)});return result}function list(prefix,sensitive){let _prefix=sensitive?prefix:prefix.toLowerCase(),tbl=buildTable(),result=[];tbl.forEach(path=>{let _path=sensitive?path:path.toLowerCase();if(_path.startsWith(_prefix)&&!isCompat(path))result.push(path)});return result.length===1?Object.keys(getPathAsObject(result[0])||{}):result}function convertCompat(path){return new MDNComp(path)}function compatToLong(mdnComp){let topLevel=mdnComp.path.indexOf(".")+1,prePath=mdnComp.path.substr(topLevel,mdnComp.path.length-mdnComp.name.length-topLevel),out=new Output(0),desktopList=["chrome","firefox","edge","ie","opera","safari"],mobileList=["android","chrome_android","firefox_android","edge_mobile","opera_android","safari_ios"],refs=["Â¹","Â²","Â³","Âª","Âº","*","1","2","3","4","5"],ref=0,notes=[],opts={markdown:options.markdown,showDesktop:!options.mobile,showMobile:!options.desktop,showNotes:!options.noNotes,notesEnd:!!options.noteend};out.addLine(ANSI.reset);out.addLine("  %0%1%2%3%4 %5",ANSI.fgYellow,prePath,ANSI.fgCyan,mdnComp.name,ANSI.reset,mdnComp.getStatus());out.addLine("  ",mdnComp.url,lf);if(opts.showDesktop){out.addLine("  %0DESKTOP:",ANSI.fgYellow);out.addLine("  %0Chrome  %1|%0 Firefox %1|%0 Edge    %1|%0 IE      %1|%0 Opera   %1|%0 Safari%1",ANSI.fgGreen+ANSI.bright,ANSI.reset);out.addLine("  %0--------+---------+---------+---------+---------+----------%1",ANSI.fgWhite+ANSI.dim,ANSI.reset);out.add(" ");versions(desktopList);out.addLine(lf);if(!options.noteend&&options.notes)out.addLine(notes.join(""));if(!options.noteend){notes=[];ref=0}}if(opts.showMobile){out.addLine("  %0MOBILE:",ANSI.fgYellow);out.addLine("  %0Android %1|%0 Chrome  %1|%0 Edge    %1|%0 Firefox %1|%0 Opera   %1|%0 Safari%1",ANSI.fgGreen+ANSI.bright,ANSI.reset);out.addLine("  %0--------+---------+---------+---------+---------+----------%1",ANSI.fgWhite+ANSI.dim,ANSI.reset);out.add(" ");versions(mobileList);out.addLine(lf);if(options.notes)out.addLine(notes.join(""))}function versions(list){list.forEach(browserId=>{let browser=mdnComp.getBrowser(browserId),status;if(browser){status=browser.info[0].getVersion();if(browser.hasNotes()){status+=ANSI.fgWhite+refs[++ref]+ANSI.reset;notes.push(browser.getNotes(refs[ref]))}}else{status=ANSI.fgRed+no+ANSI.reset}out.add("%0"+status.center(9)+"%1"+"|",status.indexOf(no)>=0?ANSI.fgRed:ANSI.fgCyan,ANSI.reset)});out.trimEnd(1)}return out.toString()}function compatToShort(mdnComp,options){let out="";options=Object.assign({},options);return out}function MDNComp(path){let obj=getPathAsObject(path).__compat,names=["webview_android","chrome","chrome_android","edge","edge_mobile","firefox","firefox_android","ie","opera","opera_android","safari","safari_ios"],isDesktop=[false,true,false,true,false,true,false,true,true,false,true,false],status=obj.status,keys=Object.keys(obj.support);this.path=path;this.name=nameFromPath(path);this.url=obj.mdn_url||"-";this.experimental=!!status.experimental;this.standard=!!status.standard_track;this.deprecated=!!status.deprecated;this.browsers=[];keys.forEach(key=>{let nameIndex=names.indexOf(key);if(nameIndex>=0){let browser=new Browser(obj,key);browser.isDesktop=isDesktop[nameIndex];this.browsers.push(browser)}})}MDNComp.prototype={getBrowser:function(name){for(let i=0;i<this.browsers.length;i++){if(this.browsers[i].name===name)return this.browsers[i]}return null},getStatus:function(){let txt="(";if(this.experimental)txt+=ANSI.fgYellow+"EXPERIMENTAL"+ANSI.reset+", ";if(this.deprecated)txt+=ANSI.fgRed+"DEPRECATED"+ANSI.reset+", ";if(this.standard)txt+=ANSI.fgGreen+ANSI.bright+"On Standard Track"+ANSI.reset+", ";return txt.substr(0,txt.length-2)+")"}};function Info(obj){this.prefix=obj.prefix||"";this.added=obj.version_added?this.toStatus(obj.version_added):no;this.removed=this.added&&obj.version_removed?this.toStatus(obj.version_removed):null;this.notes=obj.notes?Array.isArray(obj.notes)?obj.notes:[obj.notes]:[];this.partial=!!obj.partial_implementation;this.altName=obj.alternative_name||"";this.desc=obj.description||"";this.flags=obj.flags||[]}Info.prototype={getVersion:function(){return this.removed?this.added+"-"+this.removed:this.added},flagToString:function(flag){switch(flag.type){case"preference":return line("- Behind flag ");case"compile_flag":return line("- Compile with ");case"runtime_flag":return line("- Run with ")}function line(prefix){return prefix+flag.name+(flag.value_to_set?" set to "+flag.value_to_set+"":"")+"."}return""},toString:function(ref){ref=ref?ref+") ":"";let out=new Output(0),prefix=ref+(isNaN(this.added)?"":this.getVersion()+":")+"\n",hasInfo=false;if(this.prefix.length){hasInfo=true;out.addLine("- Prefix: "+this.prefix)}if(this.altName.length){hasInfo=true;out.addLine("- Alternative name: "+this.altName)}if(this.partial){hasInfo=true;out.addLine("- Is a partial implementation")}this.flags.forEach(flag=>{hasInfo=true;out.addLine(breakLine(cleanHTML(this.flagToString(flag)),options.maxWidth))});this.notes.forEach(note=>{hasInfo=true;out.addLine(breakLine(cleanHTML("- "+note),options.maxWidth))});return hasInfo?prefix+out.toString():""},toStatus:function(status){return typeof status==="boolean"||status==="true"?yes:status}};function Browser(obj,name){this.name=name;this.isDesktop=true;this.info=[];let browser=obj.support[name];if(!Array.isArray(browser))browser=[browser];browser.forEach(browserItem=>{this.info.push(new Info(browserItem))})}Browser.prototype={hasNotes:function(){let count=0;this.info.forEach(info=>{count+=info.notes.length});return count>0},getNotes:function(ref){let out=new Output(0);this.info.forEach(info=>{out.add(info.toString(ref))});return out.toString()}};function Output(indent){this.string="";this.indent="    ".substr(0,indent|0)}Output.prototype={add:function(txt){txt=txt?txt:"";if(arguments.length>1){let format=txt.indexOf("%0")>=0;for(let i=1;i<arguments.length;i++){let regEx=new RegExp("%"+(i-1),"g");txt=format?txt.replace(regEx,arguments[i]):txt+arguments[i]}}this.string+=this.indent+(txt||"")},addLine:function(txt){this.add.apply(this,arguments);this.string+="\n"},trimEnd:function(n){this.string=this.string.substr(0,Math.max(0,this.string.length-n))},toString:function(){return this.string}};